@page "/frontendproducts"
@using Microsoft.AspNetCore.WebUtilities;
@using ProductShopDemo.Models
@using ProductShopDemo.Services
@inject NavigationManager NavigationManager

@inject IProductService ProductService
@implements IDisposable

<div class="row">
    <h1>Products List</h1>
    @foreach (var product in Model.Items.Take(6))
    {
        <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
            <div class="card h-100">
                <NavLink href="#"><img class="card-img-top" src="https://via.placeholder.com/700x400" alt="@product.Name"></NavLink>
                <div class="card-body">
                    <h4 class="card-title">
                        <a href="#link_product_details">@product.Name</a>
                    </h4>
                    <p class="card-text">@product.Description</p>
                </div>
            </div>
        </div>
    }

    <div class="col-12">
        <nav aria-label="Products pagination">
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item"><a class="page-link" href="?page=@(Model.PageIndex - 1)">Previous</a></li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.PageIndex)
                    {
                        <li class="page-item active"><span class="page-link">@i</span></li>
                    }
                    else
                    {
                        <li class="page-item"><a class="page-link" href="?page=@i">@i</a></li>
                    }
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item"><a class="page-link" href="?page=@(Model.PageIndex + 1)">Next</a></li>
                }
            </ul>
        </nav>
    </div>

</div>

<div class="row">
    <h1>Recently Viewed</h1>
    <br/>
    @foreach (var product in Model.Items.Take(3))
    {
    <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
        <div class="card h-100">
            <a href="#link_product_details"><img class="card-img-top" src="https://via.placeholder.com/700x400" alt="@product.Name"></a>
            <div class="card-body">
                <h4 class="card-title">
                    <a href="#link_product_details">@product.Name</a>
                </h4>
                <p class="card-text">@product.Description</p>
            </div>
        </div>
    </div>    
    }

</div>

@code {
    [Parameter]
    public int Page { get; set; } = 1;

    private PaginationResult<Product> Model { get; set; } = new PaginationResult<Product>(new List<Product>(), 0, 1, 10);

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        Model = await ProductService.GetProductsAsync(Page);
    }

    private string GetPageUrl(int pageIndex)
    {
        var uri = new Uri(NavigationManager.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);
        query["page"] = pageIndex.ToString();
        return uri.GetLeftPart(UriPartial.Path) + QueryString.Create(query);
    }

    public void Dispose()
    {
        // Clean up resources here if needed
    }
}
