@page "/adminproducts/create"
@using ProductShopDemo.Models;
@using ProductShopDemo.Services;
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<h1>Create Product</h1>

<EditForm Model="@product" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Name:</label>
        <InputText class="form-control" @bind-Value="@product.Name" />
    </div>

    <div class="form-group">
        <label>Price:</label>
        <InputNumber class="form-control" step="0.01" @bind-Value="@product.Price" />
    </div>

    <div class="form-group">
        <label>Description:</label>
        <InputText class="form-control" @bind-Value="@product.Description" />
    </div>


    @if (product.ProductSubtype != null && product.ProductSubtype.ProductTypeId != default)
    {
        <div class="form-group">
            <label>Product Type:</label>
            <select class="form-control" @bind="@product.ProductSubtype.ProductTypeId">
                <option value="">-- Select a Product Type --</option>
                @foreach (var productType in productTypes)
                {
                    <option value="@productType.Id">@productType.Name</option>
                }
            </select>
        </div>
    }




    @if (product.ProductSubtypeId != default)
    {
        <div class="form-group">
            <label>Product Subtype:</label>
            <select class="form-control" @bind="@product.ProductSubtypeId">
                <option value="">-- Select a Product Subtype --</option>
                @foreach (var productSubtype in productSubtypes.Where(s => s.ProductTypeId == product.ProductSubtype.ProductTypeId))
                {
                    <option value="@productSubtype.Id">@productSubtype.Name</option>
                }
            </select>
        </div>
    }




    <button type="submit" class="btn btn-primary">Create</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    private Product product = new Product();
    private List<ProductType> productTypes = new List<ProductType>();
    private List<ProductSubtype> productSubtypes = new List<ProductSubtype>();

    protected override async Task OnInitializedAsync()
    {
        productTypes = await ProductService.GetProductTypes();
        productSubtypes = await ProductService.GetProductSubtypes();
    }

    private async void HandleValidSubmit()
    {
        await ProductService.CreateProduct(product);
        NavigationManager.NavigateTo("/adminproducts");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/adminproducts");
    }
}
